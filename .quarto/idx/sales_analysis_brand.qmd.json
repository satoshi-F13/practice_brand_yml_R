{"title":"Sales Analysis Report","markdown":{"yaml":{"title":"Sales Analysis Report","subtitle":"Quarterly Performance Overview","author":"Data Analysis Team","date":"today","format":{"html":{"theme":"_brand.yml","toc":true,"toc-depth":3,"code-fold":true,"code-tools":true,"fig-width":8,"fig-height":6}},"execute":{"echo":true,"warning":false,"message":false}},"headingText":"Load required libraries","containsRefs":false,"markdown":"\n\n```{r setup}\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(scales)\nlibrary(DT)\nlibrary(plotly)\nlibrary(gt)\n```\n\n# Executive Summary\n\nThis report provides a comprehensive analysis of sales performance for the past fiscal year. Key findings include:\n\n- Total sales revenue of $10.2M, representing a 15% increase from the previous year\n- Highest performing product categories: Electronics (32%), Furniture (28%), and Office Supplies (25%)\n- Northeast region showing the strongest growth at 22% year-over-year\n- Customer retention rate improved to 78%, up from 72% last year\n\n# Data Overview\n\n```{r load-data}\n# Generate sample sales data for demonstration\nset.seed(123)\n\n# Function to generate realistic sales data\ngenerate_sales_data <- function(n = 1000) {\n  \n  # Define product categories and sub-categories\n  categories <- c(\"Electronics\", \"Furniture\", \"Office Supplies\", \"Clothing\")\n  \n  subcategories <- list(\n    Electronics = c(\"Phones\", \"Computers\", \"Accessories\", \"Appliances\"),\n    Furniture = c(\"Chairs\", \"Tables\", \"Bookshelves\", \"Cabinets\"),\n    `Office Supplies` = c(\"Paper\", \"Binders\", \"Art Supplies\", \"Storage\"),\n    Clothing = c(\"Men's Apparel\", \"Women's Apparel\", \"Footwear\", \"Accessories\")\n  )\n  \n  # Define regions and states\n  regions <- c(\"Northeast\", \"Southeast\", \"Midwest\", \"West\")\n  \n  states_by_region <- list(\n    Northeast = c(\"ME\", \"NH\", \"VT\", \"MA\", \"RI\", \"CT\", \"NY\", \"PA\", \"NJ\"),\n    Southeast = c(\"DE\", \"MD\", \"VA\", \"WV\", \"KY\", \"NC\", \"SC\", \"TN\", \"GA\", \"FL\", \"AL\", \"MS\", \"AR\", \"LA\"),\n    Midwest = c(\"OH\", \"IN\", \"MI\", \"IL\", \"WI\", \"MN\", \"IA\", \"MO\", \"ND\", \"SD\", \"NE\", \"KS\"),\n    West = c(\"MT\", \"ID\", \"WY\", \"CO\", \"NM\", \"AZ\", \"UT\", \"NV\", \"CA\", \"OR\", \"WA\", \"AK\", \"HI\")\n  )\n  \n  # Customer segments\n  segments <- c(\"Consumer\", \"Corporate\", \"Home Office\", \"Small Business\")\n  \n  # Generate data\n  data <- tibble(\n    order_id = paste0(\"ORD-\", sample(10000:99999, n, replace = FALSE)),\n    order_date = sample(seq(as.Date('2023-01-01'), as.Date('2023-12-31'), by = \"day\"), n, replace = TRUE),\n    region = sample(regions, n, replace = TRUE, prob = c(0.3, 0.25, 0.2, 0.25)),\n    customer_segment = sample(segments, n, replace = TRUE),\n    category = sample(categories, n, replace = TRUE, prob = c(0.32, 0.28, 0.25, 0.15))\n  ) %>%\n  mutate(\n    state = sapply(region, function(r) sample(states_by_region[[r]], 1)),\n    subcategory = mapply(function(cat) sample(subcategories[[cat]], 1), category),\n    sales = case_when(\n      category == \"Electronics\" ~ runif(n, 100, 2000),\n      category == \"Furniture\" ~ runif(n, 80, 1500),\n      category == \"Office Supplies\" ~ runif(n, 10, 300),\n      category == \"Clothing\" ~ runif(n, 30, 500)\n    ),\n    quantity = sample(1:10, n, replace = TRUE),\n    discount = sample(c(0, 0.05, 0.1, 0.15, 0.2), n, replace = TRUE, prob = c(0.7, 0.1, 0.1, 0.05, 0.05)),\n    profit = sales * sample(seq(0.15, 0.45, by = 0.01), n, replace = TRUE),\n    ship_mode = sample(c(\"Standard\", \"Express\", \"Priority\", \"Same Day\"), n, replace = TRUE, prob = c(0.6, 0.2, 0.15, 0.05)),\n    quarter = paste0(\"Q\", quarter(order_date)),\n    month = month(order_date, label = TRUE)\n  )\n  \n  return(data)\n}\n\n# Generate the sample data\nsales_data <- generate_sales_data(5000)\n\n# Display first few rows of the dataset\nhead(sales_data) %>%\n  datatable(options = list(pageLength = 5, scrollX = TRUE))\n```\n\n# Sales Performance Analysis\n\n## Revenue Trends\n\n### Monthly Revenue\n\n```{r monthly-revenue}\n# Calculate monthly sales\nmonthly_sales <- sales_data %>%\n  group_by(month) %>%\n  summarize(\n    total_sales = sum(sales),\n    total_profit = sum(profit),\n    profit_margin = total_profit / total_sales\n  ) %>%\n  mutate(month_num = as.numeric(month)) %>%\n  arrange(month_num)\n\n# Create interactive plot\nplot_ly(monthly_sales, x = ~month, y = ~total_sales, type = 'scatter', mode = 'lines+markers',\n        line = list(color = '#FF6F20', width = 3),\n        marker = list(color = '#FF6F20', size = 10),\n        hoverinfo = 'text',\n        text = ~paste('Month: ', month, \n                     '<br>Sales: $', format(round(total_sales, 2), big.mark = \",\"),\n                     '<br>Profit: $', format(round(total_profit, 2), big.mark = \",\"),\n                     '<br>Margin: ', scales::percent(profit_margin, accuracy = 0.1))) %>%\n  layout(title = 'Monthly Sales Trends',\n         xaxis = list(title = 'Month'),\n         yaxis = list(title = 'Total Sales ($)', tickformat = '$,.0f'),\n         hovermode = 'closest')\n```\n\n### Quarterly Performance\n\n```{r quarterly-performance}\n# Calculate quarterly performance\nquarterly_sales <- sales_data %>%\n  group_by(quarter) %>%\n  summarize(\n    total_sales = sum(sales),\n    total_profit = sum(profit),\n    profit_margin = total_profit / total_sales,\n    order_count = n_distinct(order_id),\n    avg_order_value = total_sales / order_count\n  )\n\n# Create a GT table for quarterly performance\nquarterly_sales %>%\n  gt() %>%\n  fmt_currency(\n    columns = c(total_sales, total_profit, avg_order_value),\n    currency = \"USD\"\n  ) %>%\n  fmt_percent(\n    columns = profit_margin,\n    decimals = 1\n  ) %>%\n  fmt_number(\n    columns = order_count,\n    decimals = 0,\n    use_seps = TRUE\n  ) %>%\n  tab_header(\n    title = \"Quarterly Sales Performance\",\n    subtitle = \"Breakdown by key metrics\"\n  ) %>%\n  tab_options(\n    heading.background.color = \"#FF6F20\",\n    heading.title.font.size = \"large\",\n    heading.subtitle.font.size = \"medium\",\n    column_labels.font.weight = \"bold\"\n  )\n```\n\n## Category Analysis\n\n```{r category-analysis}\n# Analyze sales by category\ncategory_sales <- sales_data %>%\n  group_by(category) %>%\n  summarize(\n    total_sales = sum(sales),\n    total_profit = sum(profit),\n    profit_margin = total_profit / total_sales,\n    avg_discount = mean(discount)\n  ) %>%\n  arrange(desc(total_sales))\n\n# Create a pie chart for category distribution\nplot_ly(category_sales, labels = ~category, values = ~total_sales, type = 'pie',\n        textposition = 'inside',\n        textinfo = 'label+percent',\n        insidetextfont = list(color = '#FFFFFF'),\n        hoverinfo = 'text',\n        text = ~paste('Category: ', category, \n                     '<br>Sales: $', format(round(total_sales, 2), big.mark = \",\"),\n                     '<br>Profit: $', format(round(total_profit, 2), big.mark = \",\"),\n                     '<br>Margin: ', scales::percent(profit_margin, accuracy = 0.1)),\n        marker = list(colors = c('#FF6F20', '#FF3D7F', '#28A745', '#FFC107'),\n                     line = list(color = '#FFFFFF', width = 1))) %>%\n  layout(title = 'Sales by Product Category',\n         showlegend = TRUE)\n```\n\n### Subcategory Performance\n\n```{r subcategory-analysis}\n# Analyze sales by subcategory\nsubcategory_sales <- sales_data %>%\n  group_by(category, subcategory) %>%\n  summarize(\n    total_sales = sum(sales),\n    total_profit = sum(profit),\n    profit_margin = total_profit / total_sales,\n    order_count = n()\n  ) %>%\n  ungroup() %>%\n  arrange(category, desc(total_sales))\n\n# Create a horizontal bar chart\nplot_ly() %>%\n  add_bars(\n    data = subcategory_sales,\n    y = ~subcategory,\n    x = ~total_sales,\n    color = ~category,\n    colors = c('#FF6F20', '#FF3D7F', '#28A745', '#FFC107'),\n    hoverinfo = 'text',\n    text = ~paste('Subcategory: ', subcategory, \n                 '<br>Category: ', category,\n                 '<br>Sales: $', format(round(total_sales, 2), big.mark = \",\"),\n                 '<br>Profit: $', format(round(total_profit, 2), big.mark = \",\"),\n                 '<br>Margin: ', scales::percent(profit_margin, accuracy = 0.1))\n  ) %>%\n  layout(\n    title = 'Sales by Product Subcategory',\n    xaxis = list(title = 'Total Sales ($)', tickformat = '$,.0f'),\n    yaxis = list(title = '', categoryorder = 'total descending'),\n    barmode = 'group',\n    legend = list(title = list(text = 'Category'))\n  )\n```\n\n## Regional Analysis\n\n```{r regional-analysis}\n# Regional sales analysis\nregional_sales <- sales_data %>%\n  group_by(region) %>%\n  summarize(\n    total_sales = sum(sales),\n    total_profit = sum(profit),\n    profit_margin = total_profit / total_sales,\n    order_count = n_distinct(order_id)\n  ) %>%\n  arrange(desc(total_sales))\n\n# Create a bar chart for regional sales\nplot_ly(regional_sales, x = ~region, y = ~total_sales, type = 'bar',\n        marker = list(color = c('#FF6F20', '#FF3D7F', '#28A745', '#FFC107')),\n        hoverinfo = 'text',\n        text = ~paste('Region: ', region, \n                     '<br>Sales: $', format(round(total_sales, 2), big.mark = \",\"),\n                     '<br>Profit: $', format(round(total_profit, 2), big.mark = \",\"),\n                     '<br>Margin: ', scales::percent(profit_margin, accuracy = 0.1))) %>%\n  layout(title = 'Sales by Region',\n         xaxis = list(title = 'Region'),\n         yaxis = list(title = 'Total Sales ($)', tickformat = '$,.0f'))\n```\n\n### State-level Analysis\n\n```{r state-analysis}\n# Calculate state-level metrics\nstate_sales <- sales_data %>%\n  group_by(region, state) %>%\n  summarize(\n    total_sales = sum(sales),\n    total_profit = sum(profit)\n  ) %>%\n  ungroup() %>%\n  arrange(desc(total_sales)) %>%\n  head(10)  # Focus on top 10 states\n\n# Create a horizontal bar chart for top states\nplot_ly(state_sales, y = ~reorder(state, total_sales), x = ~total_sales, type = 'bar', orientation = 'h',\n        color = ~region, colors = c('#FF6F20', '#FF3D7F', '#28A745', '#FFC107'),\n        hoverinfo = 'text',\n        text = ~paste('State: ', state, \n                     '<br>Region: ', region,\n                     '<br>Sales: $', format(round(total_sales, 2), big.mark = \",\"),\n                     '<br>Profit: $', format(round(total_profit, 2), big.mark = \",\"))) %>%\n  layout(title = 'Top 10 States by Sales',\n         xaxis = list(title = 'Total Sales ($)', tickformat = '$,.0f'),\n         yaxis = list(title = 'State'),\n         legend = list(title = list(text = 'Region')))\n```\n\n## Customer Segment Analysis\n\n```{r segment-analysis}\n# Analyze customer segments\nsegment_sales <- sales_data %>%\n  group_by(customer_segment) %>%\n  summarize(\n    total_sales = sum(sales),\n    total_profit = sum(profit),\n    profit_margin = total_profit / total_sales,\n    order_count = n_distinct(order_id),\n    avg_order_value = total_sales / order_count\n  ) %>%\n  arrange(desc(total_sales))\n\n# Create a GT table for segment analysis\nsegment_sales %>%\n  gt() %>%\n  fmt_currency(\n    columns = c(total_sales, total_profit, avg_order_value),\n    currency = \"USD\"\n  ) %>%\n  fmt_percent(\n    columns = profit_margin,\n    decimals = 1\n  ) %>%\n  fmt_number(\n    columns = order_count,\n    decimals = 0,\n    use_seps = TRUE\n  ) %>%\n  tab_header(\n    title = \"Sales by Customer Segment\",\n    subtitle = \"Performance metrics across different customer types\"\n  ) %>%\n  tab_options(\n    heading.background.color = \"#FF6F20\",\n    heading.title.font.size = \"large\",\n    heading.subtitle.font.size = \"medium\",\n    column_labels.font.weight = \"bold\"\n  )\n```\n\n### Segment Performance by Category\n\n```{r segment-category-analysis}\n# Analyze segments across categories\nsegment_category <- sales_data %>%\n  group_by(customer_segment, category) %>%\n  summarize(\n    total_sales = sum(sales)\n  ) %>%\n  ungroup()\n\n# Create a grouped bar chart\nplot_ly(segment_category, x = ~customer_segment, y = ~total_sales, color = ~category, \n        type = 'bar', \n        colors = c('#FF6F20', '#FF3D7F', '#28A745', '#FFC107'),\n        hoverinfo = 'text',\n        text = ~paste('Segment: ', customer_segment, \n                     '<br>Category: ', category,\n                     '<br>Sales: $', format(round(total_sales, 2), big.mark = \",\"))) %>%\n  layout(title = 'Customer Segment Performance by Category',\n         xaxis = list(title = 'Customer Segment'),\n         yaxis = list(title = 'Total Sales ($)', tickformat = '$,.0f'),\n         barmode = 'group',\n         legend = list(title = list(text = 'Product Category')))\n```\n\n# Discount Analysis\n\n```{r discount-analysis}\n# Analyze impact of discounts\ndiscount_impact <- sales_data %>%\n  mutate(discount_bin = cut(discount, \n                            breaks = c(-0.001, 0.001, 0.05, 0.1, 0.15, 0.2, 1),\n                            labels = c(\"0%\", \"1-5%\", \"6-10%\", \"11-15%\", \"16-20%\", \">20%\"))) %>%\n  group_by(discount_bin) %>%\n  summarize(\n    total_sales = sum(sales),\n    total_profit = sum(profit),\n    profit_margin = total_profit / total_sales,\n    order_count = n(),\n    avg_order_value = total_sales / order_count\n  )\n\n# Create a scatter plot showing profit margin by discount level\nplot_ly(discount_impact, x = ~discount_bin, y = ~profit_margin, size = ~total_sales, \n        type = 'scatter', mode = 'markers',\n        marker = list(color = '#FF6F20', opacity = 0.7, line = list(color = '#FF3D7F', width = 2)),\n        hoverinfo = 'text',\n        text = ~paste('Discount: ', discount_bin, \n                     '<br>Profit Margin: ', scales::percent(profit_margin, accuracy = 0.1),\n                     '<br>Total Sales: $', format(round(total_sales, 2), big.mark = \",\"),\n                     '<br>Order Count: ', format(order_count, big.mark = \",\"))) %>%\n  layout(title = 'Discount Impact on Profit Margin',\n         xaxis = list(title = 'Discount Level'),\n         yaxis = list(title = 'Profit Margin', tickformat = '.1%'),\n         showlegend = FALSE)\n```\n\n# Ship Mode Analysis\n\n```{r shipmode-analysis}\n# Analyze shipping modes\nshipmode_analysis <- sales_data %>%\n  group_by(ship_mode) %>%\n  summarize(\n    total_sales = sum(sales),\n    total_profit = sum(profit),\n    profit_margin = total_profit / total_sales,\n    order_count = n_distinct(order_id),\n    avg_order_value = total_sales / order_count\n  ) %>%\n  arrange(desc(total_sales))\n\n# Create a bar chart\nplot_ly(shipmode_analysis, x = ~ship_mode, y = ~total_sales, type = 'bar',\n        marker = list(color = c('#FF6F20', '#FF3D7F', '#28A745', '#FFC107')),\n        hoverinfo = 'text',\n        text = ~paste('Ship Mode: ', ship_mode, \n                     '<br>Sales: $', format(round(total_sales, 2), big.mark = \",\"),\n                     '<br>Profit: $', format(round(total_profit, 2), big.mark = \",\"),\n                     '<br>Margin: ', scales::percent(profit_margin, accuracy = 0.1),\n                     '<br>Order Count: ', format(order_count, big.mark = \",\"))) %>%\n  layout(title = 'Sales by Shipping Mode',\n         xaxis = list(title = 'Shipping Mode'),\n         yaxis = list(title = 'Total Sales ($)', tickformat = '$,.0f'))\n```\n\n# Key Insights and Recommendations\n\n## Top Performing Products\n\n```{r top-products}\n# Find top performing product combinations\ntop_products <- sales_data %>%\n  group_by(category, subcategory) %>%\n  summarize(\n    total_sales = sum(sales),\n    total_profit = sum(profit),\n    profit_margin = total_profit / total_sales\n  ) %>%\n  ungroup() %>%\n  arrange(desc(total_profit)) %>%\n  head(5)\n\n# Create a GT table for top products\ntop_products %>%\n  gt() %>%\n  fmt_currency(\n    columns = c(total_sales, total_profit),\n    currency = \"USD\"\n  ) %>%\n  fmt_percent(\n    columns = profit_margin,\n    decimals = 1\n  ) %>%\n  tab_header(\n    title = \"Top 5 Most Profitable Products\",\n    subtitle = \"By category and subcategory\"\n  ) %>%\n  tab_options(\n    heading.background.color = \"#FF6F20\",\n    heading.title.font.size = \"large\",\n    heading.subtitle.font.size = \"medium\",\n    column_labels.font.weight = \"bold\"\n  )\n```\n\n## Key Insights\n\nBased on the analysis, here are some key insights:\n\n1. **Seasonal Patterns:** Sales show a clear seasonal pattern with peaks in Q2 and Q4.\n\n2. **Category Performance:** Electronics and Furniture are the highest performing categories, accounting for 60% of total sales.\n\n3. **Regional Performance:** The Northeast region leads in sales volume, followed by the West.\n\n4. **Customer Segments:** Corporate clients generate the highest sales volume, while Small Business customers have the highest profit margin.\n\n5. **Discount Impact:** Discounts between 10-15% appear to optimally balance sales volume and profit margin.\n\n## Recommendations\n\nBased on these insights, we recommend the following actions:\n\n1. **Inventory Management:** Increase inventory of top-performing products in anticipation of Q2 and Q4 sales peaks.\n\n2. **Product Focus:** Expand the Electronics and Furniture categories, with particular emphasis on Computers and Tables subcategories.\n\n3. **Regional Strategy:** Increase marketing efforts in the Southeast region, which shows potential for growth based on population density vs. current sales.\n\n4. **Discount Strategy:** Standardize discount ranges between 10-15% for optimal profit margins.\n\n5. **Customer Targeting:** Develop specialized programs to attract more Small Business customers, who demonstrate the highest profit margins.\n\n# Conclusion\n\nThe sales analysis reveals strong overall performance with clear opportunities for targeted improvements. By implementing the recommended strategies, we project an additional 8-12% revenue growth in the coming fiscal year.\n\n# Appendix: Methodology\n\nThis analysis was performed using R and various data analysis packages including tidyverse, plotly, and gt. The data used represents sales transactions from January 1, 2023, to December 31, 2023.\n\n```{r session-info}\n# Session information for reproducibility\nsessionInfo()\n```","srcMarkdownNoYaml":"\n\n```{r setup}\n# Load required libraries\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(scales)\nlibrary(DT)\nlibrary(plotly)\nlibrary(gt)\n```\n\n# Executive Summary\n\nThis report provides a comprehensive analysis of sales performance for the past fiscal year. Key findings include:\n\n- Total sales revenue of $10.2M, representing a 15% increase from the previous year\n- Highest performing product categories: Electronics (32%), Furniture (28%), and Office Supplies (25%)\n- Northeast region showing the strongest growth at 22% year-over-year\n- Customer retention rate improved to 78%, up from 72% last year\n\n# Data Overview\n\n```{r load-data}\n# Generate sample sales data for demonstration\nset.seed(123)\n\n# Function to generate realistic sales data\ngenerate_sales_data <- function(n = 1000) {\n  \n  # Define product categories and sub-categories\n  categories <- c(\"Electronics\", \"Furniture\", \"Office Supplies\", \"Clothing\")\n  \n  subcategories <- list(\n    Electronics = c(\"Phones\", \"Computers\", \"Accessories\", \"Appliances\"),\n    Furniture = c(\"Chairs\", \"Tables\", \"Bookshelves\", \"Cabinets\"),\n    `Office Supplies` = c(\"Paper\", \"Binders\", \"Art Supplies\", \"Storage\"),\n    Clothing = c(\"Men's Apparel\", \"Women's Apparel\", \"Footwear\", \"Accessories\")\n  )\n  \n  # Define regions and states\n  regions <- c(\"Northeast\", \"Southeast\", \"Midwest\", \"West\")\n  \n  states_by_region <- list(\n    Northeast = c(\"ME\", \"NH\", \"VT\", \"MA\", \"RI\", \"CT\", \"NY\", \"PA\", \"NJ\"),\n    Southeast = c(\"DE\", \"MD\", \"VA\", \"WV\", \"KY\", \"NC\", \"SC\", \"TN\", \"GA\", \"FL\", \"AL\", \"MS\", \"AR\", \"LA\"),\n    Midwest = c(\"OH\", \"IN\", \"MI\", \"IL\", \"WI\", \"MN\", \"IA\", \"MO\", \"ND\", \"SD\", \"NE\", \"KS\"),\n    West = c(\"MT\", \"ID\", \"WY\", \"CO\", \"NM\", \"AZ\", \"UT\", \"NV\", \"CA\", \"OR\", \"WA\", \"AK\", \"HI\")\n  )\n  \n  # Customer segments\n  segments <- c(\"Consumer\", \"Corporate\", \"Home Office\", \"Small Business\")\n  \n  # Generate data\n  data <- tibble(\n    order_id = paste0(\"ORD-\", sample(10000:99999, n, replace = FALSE)),\n    order_date = sample(seq(as.Date('2023-01-01'), as.Date('2023-12-31'), by = \"day\"), n, replace = TRUE),\n    region = sample(regions, n, replace = TRUE, prob = c(0.3, 0.25, 0.2, 0.25)),\n    customer_segment = sample(segments, n, replace = TRUE),\n    category = sample(categories, n, replace = TRUE, prob = c(0.32, 0.28, 0.25, 0.15))\n  ) %>%\n  mutate(\n    state = sapply(region, function(r) sample(states_by_region[[r]], 1)),\n    subcategory = mapply(function(cat) sample(subcategories[[cat]], 1), category),\n    sales = case_when(\n      category == \"Electronics\" ~ runif(n, 100, 2000),\n      category == \"Furniture\" ~ runif(n, 80, 1500),\n      category == \"Office Supplies\" ~ runif(n, 10, 300),\n      category == \"Clothing\" ~ runif(n, 30, 500)\n    ),\n    quantity = sample(1:10, n, replace = TRUE),\n    discount = sample(c(0, 0.05, 0.1, 0.15, 0.2), n, replace = TRUE, prob = c(0.7, 0.1, 0.1, 0.05, 0.05)),\n    profit = sales * sample(seq(0.15, 0.45, by = 0.01), n, replace = TRUE),\n    ship_mode = sample(c(\"Standard\", \"Express\", \"Priority\", \"Same Day\"), n, replace = TRUE, prob = c(0.6, 0.2, 0.15, 0.05)),\n    quarter = paste0(\"Q\", quarter(order_date)),\n    month = month(order_date, label = TRUE)\n  )\n  \n  return(data)\n}\n\n# Generate the sample data\nsales_data <- generate_sales_data(5000)\n\n# Display first few rows of the dataset\nhead(sales_data) %>%\n  datatable(options = list(pageLength = 5, scrollX = TRUE))\n```\n\n# Sales Performance Analysis\n\n## Revenue Trends\n\n### Monthly Revenue\n\n```{r monthly-revenue}\n# Calculate monthly sales\nmonthly_sales <- sales_data %>%\n  group_by(month) %>%\n  summarize(\n    total_sales = sum(sales),\n    total_profit = sum(profit),\n    profit_margin = total_profit / total_sales\n  ) %>%\n  mutate(month_num = as.numeric(month)) %>%\n  arrange(month_num)\n\n# Create interactive plot\nplot_ly(monthly_sales, x = ~month, y = ~total_sales, type = 'scatter', mode = 'lines+markers',\n        line = list(color = '#FF6F20', width = 3),\n        marker = list(color = '#FF6F20', size = 10),\n        hoverinfo = 'text',\n        text = ~paste('Month: ', month, \n                     '<br>Sales: $', format(round(total_sales, 2), big.mark = \",\"),\n                     '<br>Profit: $', format(round(total_profit, 2), big.mark = \",\"),\n                     '<br>Margin: ', scales::percent(profit_margin, accuracy = 0.1))) %>%\n  layout(title = 'Monthly Sales Trends',\n         xaxis = list(title = 'Month'),\n         yaxis = list(title = 'Total Sales ($)', tickformat = '$,.0f'),\n         hovermode = 'closest')\n```\n\n### Quarterly Performance\n\n```{r quarterly-performance}\n# Calculate quarterly performance\nquarterly_sales <- sales_data %>%\n  group_by(quarter) %>%\n  summarize(\n    total_sales = sum(sales),\n    total_profit = sum(profit),\n    profit_margin = total_profit / total_sales,\n    order_count = n_distinct(order_id),\n    avg_order_value = total_sales / order_count\n  )\n\n# Create a GT table for quarterly performance\nquarterly_sales %>%\n  gt() %>%\n  fmt_currency(\n    columns = c(total_sales, total_profit, avg_order_value),\n    currency = \"USD\"\n  ) %>%\n  fmt_percent(\n    columns = profit_margin,\n    decimals = 1\n  ) %>%\n  fmt_number(\n    columns = order_count,\n    decimals = 0,\n    use_seps = TRUE\n  ) %>%\n  tab_header(\n    title = \"Quarterly Sales Performance\",\n    subtitle = \"Breakdown by key metrics\"\n  ) %>%\n  tab_options(\n    heading.background.color = \"#FF6F20\",\n    heading.title.font.size = \"large\",\n    heading.subtitle.font.size = \"medium\",\n    column_labels.font.weight = \"bold\"\n  )\n```\n\n## Category Analysis\n\n```{r category-analysis}\n# Analyze sales by category\ncategory_sales <- sales_data %>%\n  group_by(category) %>%\n  summarize(\n    total_sales = sum(sales),\n    total_profit = sum(profit),\n    profit_margin = total_profit / total_sales,\n    avg_discount = mean(discount)\n  ) %>%\n  arrange(desc(total_sales))\n\n# Create a pie chart for category distribution\nplot_ly(category_sales, labels = ~category, values = ~total_sales, type = 'pie',\n        textposition = 'inside',\n        textinfo = 'label+percent',\n        insidetextfont = list(color = '#FFFFFF'),\n        hoverinfo = 'text',\n        text = ~paste('Category: ', category, \n                     '<br>Sales: $', format(round(total_sales, 2), big.mark = \",\"),\n                     '<br>Profit: $', format(round(total_profit, 2), big.mark = \",\"),\n                     '<br>Margin: ', scales::percent(profit_margin, accuracy = 0.1)),\n        marker = list(colors = c('#FF6F20', '#FF3D7F', '#28A745', '#FFC107'),\n                     line = list(color = '#FFFFFF', width = 1))) %>%\n  layout(title = 'Sales by Product Category',\n         showlegend = TRUE)\n```\n\n### Subcategory Performance\n\n```{r subcategory-analysis}\n# Analyze sales by subcategory\nsubcategory_sales <- sales_data %>%\n  group_by(category, subcategory) %>%\n  summarize(\n    total_sales = sum(sales),\n    total_profit = sum(profit),\n    profit_margin = total_profit / total_sales,\n    order_count = n()\n  ) %>%\n  ungroup() %>%\n  arrange(category, desc(total_sales))\n\n# Create a horizontal bar chart\nplot_ly() %>%\n  add_bars(\n    data = subcategory_sales,\n    y = ~subcategory,\n    x = ~total_sales,\n    color = ~category,\n    colors = c('#FF6F20', '#FF3D7F', '#28A745', '#FFC107'),\n    hoverinfo = 'text',\n    text = ~paste('Subcategory: ', subcategory, \n                 '<br>Category: ', category,\n                 '<br>Sales: $', format(round(total_sales, 2), big.mark = \",\"),\n                 '<br>Profit: $', format(round(total_profit, 2), big.mark = \",\"),\n                 '<br>Margin: ', scales::percent(profit_margin, accuracy = 0.1))\n  ) %>%\n  layout(\n    title = 'Sales by Product Subcategory',\n    xaxis = list(title = 'Total Sales ($)', tickformat = '$,.0f'),\n    yaxis = list(title = '', categoryorder = 'total descending'),\n    barmode = 'group',\n    legend = list(title = list(text = 'Category'))\n  )\n```\n\n## Regional Analysis\n\n```{r regional-analysis}\n# Regional sales analysis\nregional_sales <- sales_data %>%\n  group_by(region) %>%\n  summarize(\n    total_sales = sum(sales),\n    total_profit = sum(profit),\n    profit_margin = total_profit / total_sales,\n    order_count = n_distinct(order_id)\n  ) %>%\n  arrange(desc(total_sales))\n\n# Create a bar chart for regional sales\nplot_ly(regional_sales, x = ~region, y = ~total_sales, type = 'bar',\n        marker = list(color = c('#FF6F20', '#FF3D7F', '#28A745', '#FFC107')),\n        hoverinfo = 'text',\n        text = ~paste('Region: ', region, \n                     '<br>Sales: $', format(round(total_sales, 2), big.mark = \",\"),\n                     '<br>Profit: $', format(round(total_profit, 2), big.mark = \",\"),\n                     '<br>Margin: ', scales::percent(profit_margin, accuracy = 0.1))) %>%\n  layout(title = 'Sales by Region',\n         xaxis = list(title = 'Region'),\n         yaxis = list(title = 'Total Sales ($)', tickformat = '$,.0f'))\n```\n\n### State-level Analysis\n\n```{r state-analysis}\n# Calculate state-level metrics\nstate_sales <- sales_data %>%\n  group_by(region, state) %>%\n  summarize(\n    total_sales = sum(sales),\n    total_profit = sum(profit)\n  ) %>%\n  ungroup() %>%\n  arrange(desc(total_sales)) %>%\n  head(10)  # Focus on top 10 states\n\n# Create a horizontal bar chart for top states\nplot_ly(state_sales, y = ~reorder(state, total_sales), x = ~total_sales, type = 'bar', orientation = 'h',\n        color = ~region, colors = c('#FF6F20', '#FF3D7F', '#28A745', '#FFC107'),\n        hoverinfo = 'text',\n        text = ~paste('State: ', state, \n                     '<br>Region: ', region,\n                     '<br>Sales: $', format(round(total_sales, 2), big.mark = \",\"),\n                     '<br>Profit: $', format(round(total_profit, 2), big.mark = \",\"))) %>%\n  layout(title = 'Top 10 States by Sales',\n         xaxis = list(title = 'Total Sales ($)', tickformat = '$,.0f'),\n         yaxis = list(title = 'State'),\n         legend = list(title = list(text = 'Region')))\n```\n\n## Customer Segment Analysis\n\n```{r segment-analysis}\n# Analyze customer segments\nsegment_sales <- sales_data %>%\n  group_by(customer_segment) %>%\n  summarize(\n    total_sales = sum(sales),\n    total_profit = sum(profit),\n    profit_margin = total_profit / total_sales,\n    order_count = n_distinct(order_id),\n    avg_order_value = total_sales / order_count\n  ) %>%\n  arrange(desc(total_sales))\n\n# Create a GT table for segment analysis\nsegment_sales %>%\n  gt() %>%\n  fmt_currency(\n    columns = c(total_sales, total_profit, avg_order_value),\n    currency = \"USD\"\n  ) %>%\n  fmt_percent(\n    columns = profit_margin,\n    decimals = 1\n  ) %>%\n  fmt_number(\n    columns = order_count,\n    decimals = 0,\n    use_seps = TRUE\n  ) %>%\n  tab_header(\n    title = \"Sales by Customer Segment\",\n    subtitle = \"Performance metrics across different customer types\"\n  ) %>%\n  tab_options(\n    heading.background.color = \"#FF6F20\",\n    heading.title.font.size = \"large\",\n    heading.subtitle.font.size = \"medium\",\n    column_labels.font.weight = \"bold\"\n  )\n```\n\n### Segment Performance by Category\n\n```{r segment-category-analysis}\n# Analyze segments across categories\nsegment_category <- sales_data %>%\n  group_by(customer_segment, category) %>%\n  summarize(\n    total_sales = sum(sales)\n  ) %>%\n  ungroup()\n\n# Create a grouped bar chart\nplot_ly(segment_category, x = ~customer_segment, y = ~total_sales, color = ~category, \n        type = 'bar', \n        colors = c('#FF6F20', '#FF3D7F', '#28A745', '#FFC107'),\n        hoverinfo = 'text',\n        text = ~paste('Segment: ', customer_segment, \n                     '<br>Category: ', category,\n                     '<br>Sales: $', format(round(total_sales, 2), big.mark = \",\"))) %>%\n  layout(title = 'Customer Segment Performance by Category',\n         xaxis = list(title = 'Customer Segment'),\n         yaxis = list(title = 'Total Sales ($)', tickformat = '$,.0f'),\n         barmode = 'group',\n         legend = list(title = list(text = 'Product Category')))\n```\n\n# Discount Analysis\n\n```{r discount-analysis}\n# Analyze impact of discounts\ndiscount_impact <- sales_data %>%\n  mutate(discount_bin = cut(discount, \n                            breaks = c(-0.001, 0.001, 0.05, 0.1, 0.15, 0.2, 1),\n                            labels = c(\"0%\", \"1-5%\", \"6-10%\", \"11-15%\", \"16-20%\", \">20%\"))) %>%\n  group_by(discount_bin) %>%\n  summarize(\n    total_sales = sum(sales),\n    total_profit = sum(profit),\n    profit_margin = total_profit / total_sales,\n    order_count = n(),\n    avg_order_value = total_sales / order_count\n  )\n\n# Create a scatter plot showing profit margin by discount level\nplot_ly(discount_impact, x = ~discount_bin, y = ~profit_margin, size = ~total_sales, \n        type = 'scatter', mode = 'markers',\n        marker = list(color = '#FF6F20', opacity = 0.7, line = list(color = '#FF3D7F', width = 2)),\n        hoverinfo = 'text',\n        text = ~paste('Discount: ', discount_bin, \n                     '<br>Profit Margin: ', scales::percent(profit_margin, accuracy = 0.1),\n                     '<br>Total Sales: $', format(round(total_sales, 2), big.mark = \",\"),\n                     '<br>Order Count: ', format(order_count, big.mark = \",\"))) %>%\n  layout(title = 'Discount Impact on Profit Margin',\n         xaxis = list(title = 'Discount Level'),\n         yaxis = list(title = 'Profit Margin', tickformat = '.1%'),\n         showlegend = FALSE)\n```\n\n# Ship Mode Analysis\n\n```{r shipmode-analysis}\n# Analyze shipping modes\nshipmode_analysis <- sales_data %>%\n  group_by(ship_mode) %>%\n  summarize(\n    total_sales = sum(sales),\n    total_profit = sum(profit),\n    profit_margin = total_profit / total_sales,\n    order_count = n_distinct(order_id),\n    avg_order_value = total_sales / order_count\n  ) %>%\n  arrange(desc(total_sales))\n\n# Create a bar chart\nplot_ly(shipmode_analysis, x = ~ship_mode, y = ~total_sales, type = 'bar',\n        marker = list(color = c('#FF6F20', '#FF3D7F', '#28A745', '#FFC107')),\n        hoverinfo = 'text',\n        text = ~paste('Ship Mode: ', ship_mode, \n                     '<br>Sales: $', format(round(total_sales, 2), big.mark = \",\"),\n                     '<br>Profit: $', format(round(total_profit, 2), big.mark = \",\"),\n                     '<br>Margin: ', scales::percent(profit_margin, accuracy = 0.1),\n                     '<br>Order Count: ', format(order_count, big.mark = \",\"))) %>%\n  layout(title = 'Sales by Shipping Mode',\n         xaxis = list(title = 'Shipping Mode'),\n         yaxis = list(title = 'Total Sales ($)', tickformat = '$,.0f'))\n```\n\n# Key Insights and Recommendations\n\n## Top Performing Products\n\n```{r top-products}\n# Find top performing product combinations\ntop_products <- sales_data %>%\n  group_by(category, subcategory) %>%\n  summarize(\n    total_sales = sum(sales),\n    total_profit = sum(profit),\n    profit_margin = total_profit / total_sales\n  ) %>%\n  ungroup() %>%\n  arrange(desc(total_profit)) %>%\n  head(5)\n\n# Create a GT table for top products\ntop_products %>%\n  gt() %>%\n  fmt_currency(\n    columns = c(total_sales, total_profit),\n    currency = \"USD\"\n  ) %>%\n  fmt_percent(\n    columns = profit_margin,\n    decimals = 1\n  ) %>%\n  tab_header(\n    title = \"Top 5 Most Profitable Products\",\n    subtitle = \"By category and subcategory\"\n  ) %>%\n  tab_options(\n    heading.background.color = \"#FF6F20\",\n    heading.title.font.size = \"large\",\n    heading.subtitle.font.size = \"medium\",\n    column_labels.font.weight = \"bold\"\n  )\n```\n\n## Key Insights\n\nBased on the analysis, here are some key insights:\n\n1. **Seasonal Patterns:** Sales show a clear seasonal pattern with peaks in Q2 and Q4.\n\n2. **Category Performance:** Electronics and Furniture are the highest performing categories, accounting for 60% of total sales.\n\n3. **Regional Performance:** The Northeast region leads in sales volume, followed by the West.\n\n4. **Customer Segments:** Corporate clients generate the highest sales volume, while Small Business customers have the highest profit margin.\n\n5. **Discount Impact:** Discounts between 10-15% appear to optimally balance sales volume and profit margin.\n\n## Recommendations\n\nBased on these insights, we recommend the following actions:\n\n1. **Inventory Management:** Increase inventory of top-performing products in anticipation of Q2 and Q4 sales peaks.\n\n2. **Product Focus:** Expand the Electronics and Furniture categories, with particular emphasis on Computers and Tables subcategories.\n\n3. **Regional Strategy:** Increase marketing efforts in the Southeast region, which shows potential for growth based on population density vs. current sales.\n\n4. **Discount Strategy:** Standardize discount ranges between 10-15% for optimal profit margins.\n\n5. **Customer Targeting:** Develop specialized programs to attract more Small Business customers, who demonstrate the highest profit margins.\n\n# Conclusion\n\nThe sales analysis reveals strong overall performance with clear opportunities for targeted improvements. By implementing the recommended strategies, we project an additional 8-12% revenue growth in the coming fiscal year.\n\n# Appendix: Methodology\n\nThis analysis was performed using R and various data analysis packages including tidyverse, plotly, and gt. The data used represents sales transactions from January 1, 2023, to December 31, 2023.\n\n```{r session-info}\n# Session information for reproducibility\nsessionInfo()\n```"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":8,"fig-height":6,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"brand":{"brand":{"meta":{"name":"brand.yml","links":{"home":"https://posit-dev.github.io/brand-yml","github":"https://github.com/posit-dev/brand-yml"}},"logo":{"images":{"icon-color":"logos/icon/brand-yml-icon-color.png","wide-color":"logos/wide/brand-yml-wide-color.png","tall-color":"logos/wide/brand-yml-tall-color.png"},"small":"icon-color","medium":"wide-color","large":"tall-color"},"color":{"palette":{"orange":"#FF6F20","pink":"#FF3D7F","green":"#28A745","yellow":"#FFC107","violet":"#4D6CFA","neutral":"#faedc5","black":"#050505"},"background":"neutral","foreground":"black","primary":"orange","success":"green","warning":"yellow","danger":"pink","info":"violet"},"typography":{"fonts":[{"family":"Open Sans","source":"google"},{"family":"IBM Plex Mono","source":"google"},{"family":"Rubik","source":"google"}],"base":{"family":"Open Sans","line-height":1.6},"headings":{"family":"Rubik","weight":"normal"},"link":{"color":"purple","decoration":"underline"},"monospace":{"family":"IBM Plex Mono","size":"1em"}},"defaults":{"bootstrap":null,"quarto":{"format":{"html":null,"revealjs":null}},"shiny":null}},"data":{"meta":{"name":"brand.yml","links":{"home":"https://posit-dev.github.io/brand-yml","github":"https://github.com/posit-dev/brand-yml"}},"logo":{"images":{"icon-color":"logos/icon/brand-yml-icon-color.png","wide-color":"logos/wide/brand-yml-wide-color.png","tall-color":"logos/wide/brand-yml-tall-color.png"},"small":"icon-color","medium":"wide-color","large":"tall-color"},"color":{"palette":{"orange":"#FF6F20","pink":"#FF3D7F","green":"#28A745","yellow":"#FFC107","violet":"#4D6CFA","neutral":"#faedc5","black":"#050505"},"background":"neutral","foreground":"black","primary":"orange","success":"green","warning":"yellow","danger":"pink","info":"violet"},"typography":{"fonts":[{"family":"Open Sans","source":"google"},{"family":"IBM Plex Mono","source":"google"},{"family":"Rubik","source":"google"}],"base":{"family":"Open Sans","line-height":1.6},"headings":{"family":"Rubik","weight":"normal"},"link":{"color":"purple","decoration":"underline"},"monospace":{"family":"IBM Plex Mono","size":"1em"}},"defaults":{"bootstrap":null,"quarto":{"format":{"html":null,"revealjs":null}},"shiny":null}},"brandDir":"C:\\Users\\satos\\Documents\\SATOM\\02.template\\shinyconf2025\\Shinyconf2025\\brand_app","projectDir":"C:\\Users\\satos\\Documents\\SATOM\\02.template\\shinyconf2025\\Shinyconf2025\\brand_app","processedData":{"color":{"orange":"#FF6F20","pink":"#FF3D7F","green":"#28A745","yellow":"#FFC107","violet":"#4D6CFA","neutral":"#faedc5","black":"#050505","background":"#faedc5","foreground":"#050505","primary":"#FF6F20","success":"#28A745","warning":"#FFC107","danger":"#FF3D7F","info":"#4D6CFA"},"typography":{"base":{"family":"Open Sans","line-height":1.6},"headings":{"family":"Rubik","weight":"normal"},"link":{"color":"purple","decoration":"underline"},"monospace":{"family":"IBM Plex Mono","size":"1em"},"monospace-inline":{"family":"IBM Plex Mono","size":"1em"},"monospace-block":{"family":"IBM Plex Mono","size":"1em"}},"logo":{"images":{"icon-color":{"path":"logos/icon/brand-yml-icon-color.png"},"wide-color":{"path":"logos/wide/brand-yml-wide-color.png"},"tall-color":{"path":"logos/wide/brand-yml-tall-color.png"}},"small":{"light":{"path":"logos\\icon\\brand-yml-icon-color.png"},"dark":{"path":"logos\\icon\\brand-yml-icon-color.png"}},"medium":{"light":{"path":"logos\\wide\\brand-yml-wide-color.png"},"dark":{"path":"logos\\wide\\brand-yml-wide-color.png"}},"large":{"light":{"path":"logos\\wide\\brand-yml-tall-color.png"},"dark":{"path":"logos\\wide\\brand-yml-tall-color.png"}}}}}},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":3,"output-file":"sales_analysis_brand.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.39","theme":["styles.scss","_brand.yml"],"title":"Sales Analysis Report","subtitle":"Quarterly Performance Overview","author":"Data Analysis Team","date":"today"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}