---
title: "Sales Analysis Report"
subtitle: "Quarterly Performance Overview"
author: "Data Analysis Team"
date: today
format: 
  html:
    theme: _brand.yml
    toc: true
    toc-depth: 3
    code-fold: true
    code-tools: true
    fig-width: 8
    fig-height: 6
execute:
  echo: true
  warning: false
  message: false
---

```{r setup}
# Load required libraries
library(tidyverse)
library(lubridate)
library(scales)
library(DT)
library(plotly)
library(gt)
```

# Executive Summary

This report provides a comprehensive analysis of sales performance for the past fiscal year. Key findings include:

- Total sales revenue of $10.2M, representing a 15% increase from the previous year
- Highest performing product categories: Electronics (32%), Furniture (28%), and Office Supplies (25%)
- Northeast region showing the strongest growth at 22% year-over-year
- Customer retention rate improved to 78%, up from 72% last year

# Data Overview

```{r load-data}
# Generate sample sales data for demonstration
set.seed(123)

# Function to generate realistic sales data
generate_sales_data <- function(n = 1000) {
  
  # Define product categories and sub-categories
  categories <- c("Electronics", "Furniture", "Office Supplies", "Clothing")
  
  subcategories <- list(
    Electronics = c("Phones", "Computers", "Accessories", "Appliances"),
    Furniture = c("Chairs", "Tables", "Bookshelves", "Cabinets"),
    `Office Supplies` = c("Paper", "Binders", "Art Supplies", "Storage"),
    Clothing = c("Men's Apparel", "Women's Apparel", "Footwear", "Accessories")
  )
  
  # Define regions and states
  regions <- c("Northeast", "Southeast", "Midwest", "West")
  
  states_by_region <- list(
    Northeast = c("ME", "NH", "VT", "MA", "RI", "CT", "NY", "PA", "NJ"),
    Southeast = c("DE", "MD", "VA", "WV", "KY", "NC", "SC", "TN", "GA", "FL", "AL", "MS", "AR", "LA"),
    Midwest = c("OH", "IN", "MI", "IL", "WI", "MN", "IA", "MO", "ND", "SD", "NE", "KS"),
    West = c("MT", "ID", "WY", "CO", "NM", "AZ", "UT", "NV", "CA", "OR", "WA", "AK", "HI")
  )
  
  # Customer segments
  segments <- c("Consumer", "Corporate", "Home Office", "Small Business")
  
  # Generate data
  data <- tibble(
    order_id = paste0("ORD-", sample(10000:99999, n, replace = FALSE)),
    order_date = sample(seq(as.Date('2023-01-01'), as.Date('2023-12-31'), by = "day"), n, replace = TRUE),
    region = sample(regions, n, replace = TRUE, prob = c(0.3, 0.25, 0.2, 0.25)),
    customer_segment = sample(segments, n, replace = TRUE),
    category = sample(categories, n, replace = TRUE, prob = c(0.32, 0.28, 0.25, 0.15))
  ) %>%
  mutate(
    state = sapply(region, function(r) sample(states_by_region[[r]], 1)),
    subcategory = mapply(function(cat) sample(subcategories[[cat]], 1), category),
    sales = case_when(
      category == "Electronics" ~ runif(n, 100, 2000),
      category == "Furniture" ~ runif(n, 80, 1500),
      category == "Office Supplies" ~ runif(n, 10, 300),
      category == "Clothing" ~ runif(n, 30, 500)
    ),
    quantity = sample(1:10, n, replace = TRUE),
    discount = sample(c(0, 0.05, 0.1, 0.15, 0.2), n, replace = TRUE, prob = c(0.7, 0.1, 0.1, 0.05, 0.05)),
    profit = sales * sample(seq(0.15, 0.45, by = 0.01), n, replace = TRUE),
    ship_mode = sample(c("Standard", "Express", "Priority", "Same Day"), n, replace = TRUE, prob = c(0.6, 0.2, 0.15, 0.05)),
    quarter = paste0("Q", quarter(order_date)),
    month = month(order_date, label = TRUE)
  )
  
  return(data)
}

# Generate the sample data
sales_data <- generate_sales_data(5000)

# Display first few rows of the dataset
head(sales_data) %>%
  datatable(options = list(pageLength = 5, scrollX = TRUE))
```

# Sales Performance Analysis

## Revenue Trends

### Monthly Revenue

```{r monthly-revenue}
# Calculate monthly sales
monthly_sales <- sales_data %>%
  group_by(month) %>%
  summarize(
    total_sales = sum(sales),
    total_profit = sum(profit),
    profit_margin = total_profit / total_sales
  ) %>%
  mutate(month_num = as.numeric(month)) %>%
  arrange(month_num)

# Create interactive plot
plot_ly(monthly_sales, x = ~month, y = ~total_sales, type = 'scatter', mode = 'lines+markers',
        line = list(color = '#FF6F20', width = 3),
        marker = list(color = '#FF6F20', size = 10),
        hoverinfo = 'text',
        text = ~paste('Month: ', month, 
                     '<br>Sales: $', format(round(total_sales, 2), big.mark = ","),
                     '<br>Profit: $', format(round(total_profit, 2), big.mark = ","),
                     '<br>Margin: ', scales::percent(profit_margin, accuracy = 0.1))) %>%
  layout(title = 'Monthly Sales Trends',
         xaxis = list(title = 'Month'),
         yaxis = list(title = 'Total Sales ($)', tickformat = '$,.0f'),
         hovermode = 'closest')
```

### Quarterly Performance

```{r quarterly-performance}
# Calculate quarterly performance
quarterly_sales <- sales_data %>%
  group_by(quarter) %>%
  summarize(
    total_sales = sum(sales),
    total_profit = sum(profit),
    profit_margin = total_profit / total_sales,
    order_count = n_distinct(order_id),
    avg_order_value = total_sales / order_count
  )

# Create a GT table for quarterly performance
quarterly_sales %>%
  gt() %>%
  fmt_currency(
    columns = c(total_sales, total_profit, avg_order_value),
    currency = "USD"
  ) %>%
  fmt_percent(
    columns = profit_margin,
    decimals = 1
  ) %>%
  fmt_number(
    columns = order_count,
    decimals = 0,
    use_seps = TRUE
  ) %>%
  tab_header(
    title = "Quarterly Sales Performance",
    subtitle = "Breakdown by key metrics"
  ) %>%
  tab_options(
    heading.background.color = "#FF6F20",
    heading.title.font.size = "large",
    heading.subtitle.font.size = "medium",
    column_labels.font.weight = "bold"
  )
```

## Category Analysis

```{r category-analysis}
# Analyze sales by category
category_sales <- sales_data %>%
  group_by(category) %>%
  summarize(
    total_sales = sum(sales),
    total_profit = sum(profit),
    profit_margin = total_profit / total_sales,
    avg_discount = mean(discount)
  ) %>%
  arrange(desc(total_sales))

# Create a pie chart for category distribution
plot_ly(category_sales, labels = ~category, values = ~total_sales, type = 'pie',
        textposition = 'inside',
        textinfo = 'label+percent',
        insidetextfont = list(color = '#FFFFFF'),
        hoverinfo = 'text',
        text = ~paste('Category: ', category, 
                     '<br>Sales: $', format(round(total_sales, 2), big.mark = ","),
                     '<br>Profit: $', format(round(total_profit, 2), big.mark = ","),
                     '<br>Margin: ', scales::percent(profit_margin, accuracy = 0.1)),
        marker = list(colors = c('#FF6F20', '#FF3D7F', '#28A745', '#FFC107'),
                     line = list(color = '#FFFFFF', width = 1))) %>%
  layout(title = 'Sales by Product Category',
         showlegend = TRUE)
```

### Subcategory Performance

```{r subcategory-analysis}
# Analyze sales by subcategory
subcategory_sales <- sales_data %>%
  group_by(category, subcategory) %>%
  summarize(
    total_sales = sum(sales),
    total_profit = sum(profit),
    profit_margin = total_profit / total_sales,
    order_count = n()
  ) %>%
  ungroup() %>%
  arrange(category, desc(total_sales))

# Create a horizontal bar chart
plot_ly() %>%
  add_bars(
    data = subcategory_sales,
    y = ~subcategory,
    x = ~total_sales,
    color = ~category,
    colors = c('#FF6F20', '#FF3D7F', '#28A745', '#FFC107'),
    hoverinfo = 'text',
    text = ~paste('Subcategory: ', subcategory, 
                 '<br>Category: ', category,
                 '<br>Sales: $', format(round(total_sales, 2), big.mark = ","),
                 '<br>Profit: $', format(round(total_profit, 2), big.mark = ","),
                 '<br>Margin: ', scales::percent(profit_margin, accuracy = 0.1))
  ) %>%
  layout(
    title = 'Sales by Product Subcategory',
    xaxis = list(title = 'Total Sales ($)', tickformat = '$,.0f'),
    yaxis = list(title = '', categoryorder = 'total descending'),
    barmode = 'group',
    legend = list(title = list(text = 'Category'))
  )
```

## Regional Analysis

```{r regional-analysis}
# Regional sales analysis
regional_sales <- sales_data %>%
  group_by(region) %>%
  summarize(
    total_sales = sum(sales),
    total_profit = sum(profit),
    profit_margin = total_profit / total_sales,
    order_count = n_distinct(order_id)
  ) %>%
  arrange(desc(total_sales))

# Create a bar chart for regional sales
plot_ly(regional_sales, x = ~region, y = ~total_sales, type = 'bar',
        marker = list(color = c('#FF6F20', '#FF3D7F', '#28A745', '#FFC107')),
        hoverinfo = 'text',
        text = ~paste('Region: ', region, 
                     '<br>Sales: $', format(round(total_sales, 2), big.mark = ","),
                     '<br>Profit: $', format(round(total_profit, 2), big.mark = ","),
                     '<br>Margin: ', scales::percent(profit_margin, accuracy = 0.1))) %>%
  layout(title = 'Sales by Region',
         xaxis = list(title = 'Region'),
         yaxis = list(title = 'Total Sales ($)', tickformat = '$,.0f'))
```

### State-level Analysis

```{r state-analysis}
# Calculate state-level metrics
state_sales <- sales_data %>%
  group_by(region, state) %>%
  summarize(
    total_sales = sum(sales),
    total_profit = sum(profit)
  ) %>%
  ungroup() %>%
  arrange(desc(total_sales)) %>%
  head(10)  # Focus on top 10 states

# Create a horizontal bar chart for top states
plot_ly(state_sales, y = ~reorder(state, total_sales), x = ~total_sales, type = 'bar', orientation = 'h',
        color = ~region, colors = c('#FF6F20', '#FF3D7F', '#28A745', '#FFC107'),
        hoverinfo = 'text',
        text = ~paste('State: ', state, 
                     '<br>Region: ', region,
                     '<br>Sales: $', format(round(total_sales, 2), big.mark = ","),
                     '<br>Profit: $', format(round(total_profit, 2), big.mark = ","))) %>%
  layout(title = 'Top 10 States by Sales',
         xaxis = list(title = 'Total Sales ($)', tickformat = '$,.0f'),
         yaxis = list(title = 'State'),
         legend = list(title = list(text = 'Region')))
```

## Customer Segment Analysis

```{r segment-analysis}
# Analyze customer segments
segment_sales <- sales_data %>%
  group_by(customer_segment) %>%
  summarize(
    total_sales = sum(sales),
    total_profit = sum(profit),
    profit_margin = total_profit / total_sales,
    order_count = n_distinct(order_id),
    avg_order_value = total_sales / order_count
  ) %>%
  arrange(desc(total_sales))

# Create a GT table for segment analysis
segment_sales %>%
  gt() %>%
  fmt_currency(
    columns = c(total_sales, total_profit, avg_order_value),
    currency = "USD"
  ) %>%
  fmt_percent(
    columns = profit_margin,
    decimals = 1
  ) %>%
  fmt_number(
    columns = order_count,
    decimals = 0,
    use_seps = TRUE
  ) %>%
  tab_header(
    title = "Sales by Customer Segment",
    subtitle = "Performance metrics across different customer types"
  ) %>%
  tab_options(
    heading.background.color = "#FF6F20",
    heading.title.font.size = "large",
    heading.subtitle.font.size = "medium",
    column_labels.font.weight = "bold"
  )
```

### Segment Performance by Category

```{r segment-category-analysis}
# Analyze segments across categories
segment_category <- sales_data %>%
  group_by(customer_segment, category) %>%
  summarize(
    total_sales = sum(sales)
  ) %>%
  ungroup()

# Create a grouped bar chart
plot_ly(segment_category, x = ~customer_segment, y = ~total_sales, color = ~category, 
        type = 'bar', 
        colors = c('#FF6F20', '#FF3D7F', '#28A745', '#FFC107'),
        hoverinfo = 'text',
        text = ~paste('Segment: ', customer_segment, 
                     '<br>Category: ', category,
                     '<br>Sales: $', format(round(total_sales, 2), big.mark = ","))) %>%
  layout(title = 'Customer Segment Performance by Category',
         xaxis = list(title = 'Customer Segment'),
         yaxis = list(title = 'Total Sales ($)', tickformat = '$,.0f'),
         barmode = 'group',
         legend = list(title = list(text = 'Product Category')))
```

# Discount Analysis

```{r discount-analysis}
# Analyze impact of discounts
discount_impact <- sales_data %>%
  mutate(discount_bin = cut(discount, 
                            breaks = c(-0.001, 0.001, 0.05, 0.1, 0.15, 0.2, 1),
                            labels = c("0%", "1-5%", "6-10%", "11-15%", "16-20%", ">20%"))) %>%
  group_by(discount_bin) %>%
  summarize(
    total_sales = sum(sales),
    total_profit = sum(profit),
    profit_margin = total_profit / total_sales,
    order_count = n(),
    avg_order_value = total_sales / order_count
  )

# Create a scatter plot showing profit margin by discount level
plot_ly(discount_impact, x = ~discount_bin, y = ~profit_margin, size = ~total_sales, 
        type = 'scatter', mode = 'markers',
        marker = list(color = '#FF6F20', opacity = 0.7, line = list(color = '#FF3D7F', width = 2)),
        hoverinfo = 'text',
        text = ~paste('Discount: ', discount_bin, 
                     '<br>Profit Margin: ', scales::percent(profit_margin, accuracy = 0.1),
                     '<br>Total Sales: $', format(round(total_sales, 2), big.mark = ","),
                     '<br>Order Count: ', format(order_count, big.mark = ","))) %>%
  layout(title = 'Discount Impact on Profit Margin',
         xaxis = list(title = 'Discount Level'),
         yaxis = list(title = 'Profit Margin', tickformat = '.1%'),
         showlegend = FALSE)
```

# Ship Mode Analysis

```{r shipmode-analysis}
# Analyze shipping modes
shipmode_analysis <- sales_data %>%
  group_by(ship_mode) %>%
  summarize(
    total_sales = sum(sales),
    total_profit = sum(profit),
    profit_margin = total_profit / total_sales,
    order_count = n_distinct(order_id),
    avg_order_value = total_sales / order_count
  ) %>%
  arrange(desc(total_sales))

# Create a bar chart
plot_ly(shipmode_analysis, x = ~ship_mode, y = ~total_sales, type = 'bar',
        marker = list(color = c('#FF6F20', '#FF3D7F', '#28A745', '#FFC107')),
        hoverinfo = 'text',
        text = ~paste('Ship Mode: ', ship_mode, 
                     '<br>Sales: $', format(round(total_sales, 2), big.mark = ","),
                     '<br>Profit: $', format(round(total_profit, 2), big.mark = ","),
                     '<br>Margin: ', scales::percent(profit_margin, accuracy = 0.1),
                     '<br>Order Count: ', format(order_count, big.mark = ","))) %>%
  layout(title = 'Sales by Shipping Mode',
         xaxis = list(title = 'Shipping Mode'),
         yaxis = list(title = 'Total Sales ($)', tickformat = '$,.0f'))
```

# Key Insights and Recommendations

## Top Performing Products

```{r top-products}
# Find top performing product combinations
top_products <- sales_data %>%
  group_by(category, subcategory) %>%
  summarize(
    total_sales = sum(sales),
    total_profit = sum(profit),
    profit_margin = total_profit / total_sales
  ) %>%
  ungroup() %>%
  arrange(desc(total_profit)) %>%
  head(5)

# Create a GT table for top products
top_products %>%
  gt() %>%
  fmt_currency(
    columns = c(total_sales, total_profit),
    currency = "USD"
  ) %>%
  fmt_percent(
    columns = profit_margin,
    decimals = 1
  ) %>%
  tab_header(
    title = "Top 5 Most Profitable Products",
    subtitle = "By category and subcategory"
  ) %>%
  tab_options(
    heading.background.color = "#FF6F20",
    heading.title.font.size = "large",
    heading.subtitle.font.size = "medium",
    column_labels.font.weight = "bold"
  )
```

## Key Insights

Based on the analysis, here are some key insights:

1. **Seasonal Patterns:** Sales show a clear seasonal pattern with peaks in Q2 and Q4.

2. **Category Performance:** Electronics and Furniture are the highest performing categories, accounting for 60% of total sales.

3. **Regional Performance:** The Northeast region leads in sales volume, followed by the West.

4. **Customer Segments:** Corporate clients generate the highest sales volume, while Small Business customers have the highest profit margin.

5. **Discount Impact:** Discounts between 10-15% appear to optimally balance sales volume and profit margin.

## Recommendations

Based on these insights, we recommend the following actions:

1. **Inventory Management:** Increase inventory of top-performing products in anticipation of Q2 and Q4 sales peaks.

2. **Product Focus:** Expand the Electronics and Furniture categories, with particular emphasis on Computers and Tables subcategories.

3. **Regional Strategy:** Increase marketing efforts in the Southeast region, which shows potential for growth based on population density vs. current sales.

4. **Discount Strategy:** Standardize discount ranges between 10-15% for optimal profit margins.

5. **Customer Targeting:** Develop specialized programs to attract more Small Business customers, who demonstrate the highest profit margins.

# Conclusion

The sales analysis reveals strong overall performance with clear opportunities for targeted improvements. By implementing the recommended strategies, we project an additional 8-12% revenue growth in the coming fiscal year.

# Appendix: Methodology

This analysis was performed using R and various data analysis packages including tidyverse, plotly, and gt. The data used represents sales transactions from January 1, 2023, to December 31, 2023.

```{r session-info}
# Session information for reproducibility
sessionInfo()
```